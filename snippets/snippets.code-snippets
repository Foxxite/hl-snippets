{
	"NXCore:Server": {
		"prefix": ["nxcore:server", "nxcore:client"],
		"body": ["NXCore = exports['nx-core']:GetCoreObject()", ""],
		"description": "Code om de NXCore in te laden."
	},
	"NXCore:BaseEvents": {
		"prefix": ["nxcore:baseevents", "onplayerloaded"],
		"body": [
			"NXCore = exports['nx-core']:GetCoreObject()",
			"",
			"local PlayerJob = {}",
			"local isLoggedIn = false",
			"",
			"RegisterNetEvent('NXCore:Client:OnPlayerLoaded')",
			"AddEventHandler('NXCore:Client:OnPlayerLoaded', function()",
			"    isLoggedIn = true",
			"    PlayerJob = NXCore.Functions.GetPlayerData().job",
			"end)",
			"",
			"RegisterNetEvent('NXCore:Client:OnPlayerUnload')",
			"AddEventHandler('NXCore:Client:OnPlayerUnload', function()",
			"    isLoggedIn = false",
			"end)",
			"",
			"RegisterNetEvent('NXCore:Client:OnJobUpdate')",
			"AddEventHandler('NXCore:Client:OnJobUpdate', function(JobInfo)",
			"    PlayerJob = JobInfo",
			"end)",
			""
		],
		"description": "Client side code om de NXCore base events in te laden."
	},

	"Notify:Server": {
		"prefix": ["notify:server"],
		"body": ["TriggerClientEvent(\"NXCore:Notify\", source, \"${1:message}\", \"${2:type}\", 3500)", ""],
		"description": "Server side code om een notificatie te tonen."
	},
	"Notify:Client": {
		"prefix": ["notify:client", "NXCore.Functions."],
		"body": ["NXCore.Functions.Notify(\"${1:message}\", \"${2:type}\")", ""],
		"description": "Client side code om een notificatie te tonen."
	},

	"ShowHelp": {
		"prefix": ["ShowHelp", "NXCore.Functions."],
		"body": ["NXCore.Functions.ShowHelp(\"${1:message}\", \"${2:type}\")", ""],
		"description": "Client side code ter vervanging voor DrawText3D."
	},

	"control:addcontrolablefield": {
		"prefix": ["nx-control", "control", "nxcontrol", "addfield"],
		"body": [
			"exports[\"nx-control\"]:AddControlableField(GetCurrentResourceName(), '${1:name}', function() return ${2:Config.Cooldown} end, function(val) ${2:Config.Cooldown} = val end)",
			""
		],
		"description": "Register een NX-EYE interaction"
	},

	"CreateCallback": {
		"prefix": ["CreateCallback", "RegisterCallback", "NXCore.Functions.CreateCallback"],
		"body": [
			"NXCore.Functions.CreateCallback('nx-${1:ResourceName}:server:${2:CallbackName}', function(source, cb, ...)",
			"    local src = source",
			"    local Player = NXCore.Functions.GetPlayer(src)",
			"",
			"    cb(true)",
			"end)",
			""
		],
		"description": "Registeer een nieuwe callback"
	},

	"TriggerCallback": {
		"prefix": ["TriggerCallback", "NXCore.Functions.TriggerCallback"],
		"body": [
			"NXCore.Functions.TriggerCallback('nx-${1:ResourceName}:server:${2:CallbackName}', function(retval)",
			"    ${3}",
			"end)",
			""
		],
		"description": "Trigger een callback"
	},

	"CreateUseableItem": {
		"prefix": "NXCore.Functions.CreateUseableItem",

		"body": [
			"NXCore.Functions.CreateUseableItem('${1:Item Naam}', function(source, item)",
			"    local Player = NXCore.Functions.GetPlayer(source)",
			"    if Player.Functions.RemoveItem(item.name, 1, item.slot) then",
			"        TriggerClientEvent(\"${2:Resource Naam}:client:Use\", source)",
			"    end",
			"end)",
			""
		],
		"description": "Makes an item useable."
	},

	"CommandAdd": {
		"prefix": ["NXCore.Commands.Add", "Add", "Command", "RegisterCommand", "AddCommand"],

		"body": [
			"NXCore.Commands.Add('${1:Command Naam}', '${2:Command Desc}', {{name='${3:arg name}', help='${4:arg help}'}}, false, function(source, args)",
			"",
			"end, '${5:perm}')",
			""
		],
		"description": "Register a new command."
	},

	"Player": {
		"prefix": ["Player", "GetPlayer"],
		"body": ["local Player = NXCore.Functions.GetPlayer(source)", ""],
		"description": "Get the player object"
	},

	"LocalPlayer.state.isLoggedIn": {
		"prefix": ["LocalPlayer.state.isLoggedIn", "isLoggedIn"],
		"body": ["if LocalPlayer.state.isLoggedIn then", ""],
		"description": "Is the player logged in?"
	}
}
