{
	"HLCore:Server": {
		"prefix": ["hlcore:server"],
		"body": ["HLCore = nil", "TriggerEvent('HLCore:GetObject', function(obj) HLCore = obj end)", ""],
		"description": "Server side code om de HLCore in te laden."
	},
	"HLCore:Client": {
		"prefix": ["hlcore:client", "hlcore:baseevents", "onplayerloaded"],
		"body": [
			"HLCore = nil",
			"",
			"Citizen.CreateThread(function()",
			"    while HLCore == nil do",
			"        TriggerEvent('HLCore:GetObject', function(obj) HLCore = obj end)",
			"        Citizen.Wait(20)",
			"    end",
			"end)",
			"",
			"local PlayerJob = {}",
			"local isLoggedIn = false",
			"",
			"RegisterNetEvent('HLCore:Client:OnPlayerLoaded')",
			"AddEventHandler('HLCore:Client:OnPlayerLoaded', function()",
			"    isLoggedIn = true",
			"    PlayerJob = HLCore.Functions.GetPlayerData().job",
			"end)",
			"",
			"RegisterNetEvent('HLCore:Client:OnPlayerUnload')",
			"AddEventHandler('HLCore:Client:OnPlayerUnload', function()",
			"    isLoggedIn = false",
			"end)",
			"",
			"RegisterNetEvent('HLCore:Client:OnJobUpdate')",
			"AddEventHandler('HLCore:Client:OnJobUpdate', function(JobInfo)",
			"    PlayerJob = JobInfo",
			"end)",
			""
		],
		"description": "Client side code om de HLCore en base events in te laden."
	},

	"Notify:Server": {
		"prefix": ["notify:server"],
		"body": ["TriggerClientEvent(\"HLCore:Notify\", source, \"${1:message}\", \"${2:type}\", 3500)", ""],
		"description": "Server side code om een notificatie te tonen."
	},
	"Notify:Client": {
		"prefix": ["notify:client", "HLCore.Functions."],
		"body": ["HLCore.Functions.Notify(\"${1:message}\", \"${2:type}\")", ""],
		"description": "Client side code om een notificatie te tonen."
	},

	"ShowHelp": {
		"prefix": ["ShowHelp", "HLCore.Functions."],
		"body": ["HLCore.Functions.ShowHelp(\"${1:message}\", \"${2:type}\")", ""],
		"description": "Client side code ter vervanging voor DrawText3D."
	},

	"eye:setup": {
		"prefix": ["hl-eye", "eye", "hleye"],
		"body": [
			"RegisterNetEvent(\"HLCore:Client:OnPlayerLoaded\")",
			"AddEventHandler(\"HLCore:Client:OnPlayerLoaded\", function()",
			"    exports[\"hl-eye\"]:RegisterInteraction(\"${1:Display name}\", \"fas fa-${2:icon}\", ${3:CheckFun}, ${4:ExecuteFun}, \"${5:key}\")",
			"end)",
			"",
			"function CheckFun()",
			"    if isLoggedIn then",
			"        return true",
			"    end",
			"",
			"    return false",
			"end",
			"",
			"function ExecuteFun()",
			"    HLCore.Functions.Notify(\"Oogje werkt!\", \"info\")",
			"end",
			""
		],
		"description": "Boilerplate code voor een HL-EYE interaction"
	},
	"eye:registerinteraction": {
		"prefix": ["hl-eye", "eye", "hleye", "registerinteraction"],
		"body": [
			"exports[\"hl-eye\"]:RegisterInteraction(\"${1:Display name}\", \"fas fa-${2:icon}\", ${3:CheckFun}, ${4:ExecuteFun}, \"${5:key}\")",
			""
		],
		"description": "Register een HL-EYE interaction"
	},

	"CreateCallback": {
		"prefix": ["CreateCallback", "RegisterCallback", "HLCore.Functions.CreateCallback"],
		"body": [
			"HLCore.Functions.CreateCallback('hl-${1:ResourceName}:server:${2:CallbackName}', function(source, cb, ...)",
			"    local src = source",
			"    local Player = HLCore.Functions.GetPlayer(src)",
			"",
			"    cb(true)",
			"end)",
			""
		],
		"description": "Registeer een nieuwe callback"
	},

	"TriggerCallback": {
		"prefix": ["TriggerCallback", "HLCore.Functions.TriggerCallback"],
		"body": [
			"HLCore.Functions.TriggerCallback('hl-${1:ResourceName}:server:${2:CallbackName}', function(retval)",
			"    ${1}",
			"end)",
			""
		],
		"description": "Trigger een callback"
	},

	"CreateUseableItem": {
		"prefix": "HLCore.Functions.CreateUseableItem",

		"body": [
			"HLCore.Functions.CreateUseableItem('${1:Item Naam}', function(source, item)",
			"    local Player = HLCore.Functions.GetPlayer(source)",
			"    if Player.Functions.RemoveItem(item.name, 1, item.slot) then",
			"        TriggerClientEvent(\"${2:Resource Naam}:client:Use\", source)",
			"    end",
			"end)",
			""
		],
		"description": "Makes an item useable."
	},

	"CommandAdd": {
		"prefix": ["HLCore.Commands.Add", "Add", "Command", "RegisterCommand", "AddCommand"],

		"body": [
			"HLCore.Commands.Add('${1:Command Naam}', '${2:Command Desc}', {{name='${3:arg name}', help='${4:arg help}'}, false, function(source, args)",
			"",
			"end, '${5:perm}')",
			""
		],
		"description": "Register a new command."
	},

	"Player": {
		"prefix": ["Player", "GetPlayer"],
		"body": ["local Player = HLCore.Functions.GetPlayer(source)", ""],
		"description": "Get the player object"
	}
}
